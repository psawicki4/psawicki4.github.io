{
  "contact": "Contact",
  "HOME": {
    "hello": "Hello,",
    "my-name-is": "my name is",
    "my-webpage": "and this is my website in the form of a technology demo.",
    "repository": "The entire application code is available at:",
    "tools": "To build this site, I used:",
    "including": "including Signals, Standalone and Zone-less"
  },
  "MENU": {
    "home": "Home",
    "form": "Form",
    "list": "List",
    "animations": "Animations",
    "grid": "Grid",
    "model-3d": "3D Model"
  },
  "CONTACT": {
    "contact": "Contact",
    "content": "Feel free to write to me at email:",
    "close": "Close"
  },
  "FORM": {
    "header": "Form demo",
    "component-desc-desktop": "A dynamic form built from various Angular Material components. On the right side there is a live preview of the form model.",
    "component-desc-mobile": "A dynamic form built from various Angular Material components. At the bottom of the page there is a live preview of the form model.",
    "dog-or-cat": "Dog or cat?",
    "dog": "dog",
    "cat": "cat",
    "name": "Name",
    "required-field": "Required field",
    "age": "Age",
    "age-hint": "If the cat is not yet a year old, enter 0.",
    "age-error-real": "Enter the true age",
    "invalid-age": "Date of birth does not match the entered age",
    "invalid-date-format": "Incorrect date format (YYYY-MM-DD)",
    "description": "Description",
    "birthday": "Date of birth (if known)",
    "sterilized": "Sterilized",
    "purebred": "Purebred",
    "breed": "Breed",
    "favourite-toys": "Favorite toys",
    "new-toy": "New toy...",
    "toys-hint": "Validate with enter or comma",
    "toys-hint-mobile": "Validate with enter",
    "beauty": "Beauty",
    "beauty-error": "The beauty of the cat must not be less than 5",
    "malice": "Malice",
    "reset": "Reset",
    "check": "Check",
    "form-model": "form model:",
    "choose-cat": "Better choose a cat",
    "choose-cat__btn": "Well...",
    "valid-form": "Ready, {{value}} wants to play!",
    "ok": "ok",
    "invalid-form": "Fill in the required fields"
  },
  "LIST": {
    "header": "Infinite virtual list",
    "component-desc": "A list implementation that combines two solutions: \"infinity\", i.e. constantly adding more elements to the list data source, and \"virtuality\", i.e. dynamically adding and removing list elements from the document structure. This allows even the largest lists to load quickly and remain responsive.",
    "hello": "Welcome to the infinite hotel. Please select a room:",
    "room-number": "Room no.",
    "room-nr": "Room no.",
    "reservation": "reservation",
    "selected-room": "Selected room:",
    "cancel": "Cancel",
    "reserve": "Reserve",
    "delete-reservation": "Delete the reservation",
    "your-reservations": "Your reservations:"
  },
  "GRID": {
    "header": "Table of countries",
    "component-desc": "AG Grid table implementation with sorting, filtering and paging. Ability to resize and reorder columns. Automatic storage of grid state. Export option to CSV file.",
    "name": "Name",
    "capital": "Capital",
    "population": "Population",
    "region": "Region",
    "area": "Area",
    "unMember": "UN member",
    "languages": "Language",
    "csv-export": "Export to CSV",
    "reset-state": "Reset state",
    "landscape": "Switch to landscape mode"
  },
  "MODEL_3D": {
    "header": "3D Model",
    "component-desc": "3D model implementation using the Three.js library. Ability to rotate the model and change its lighting."
  }
}